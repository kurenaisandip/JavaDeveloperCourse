
Introduction
     * The Java Collection Framework is a set of interfaces and classes in the packages java.util
     * and java.util.concurrent. They provide client programs with various models of how to organize their objects, and various implementations
     * of each model.
     *
     * These models are sometimes called abstract data types, and we need them because different programs need
     * different ways of organizing their objects.
     * 
     * EXAMPLE 1
     * 
     * In one situation, you might want to organize your program's objects
     * in a sequential list because their ordering is important and there are duplicates.
     * In another, a set might be the right data type because
     * now ordering is unimportant and you want to discard the duplicates,
     *
     * These two data types (and others) are represented by different
     * interfaces in the collection Framework.
     *
     *
     * Example 2
     *
     * a linked list may be better than an array implementation of lists
     * for inserting and removing elements from the middle, but much worse for random
     * access.
     *
     * So choosing the right implementation for your program
     * involves knowing how it will be used as well as what is available.
     * 
     *
     
     *
     

